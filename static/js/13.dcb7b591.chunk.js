(this["webpackJsonpreact-test-app"]=this["webpackJsonpreact-test-app"]||[]).push([[13],{405:function(t,n,e){"use strict";e.r(n);var c=e(0),a=e.n(c),u=e(124),r=e(14),s=e(3),o=function(){var t=Object(c.useState)(Math.random()),n=Object(r.a)(t,2),e=n[0],u=n[1],o=Object(c.useState)(Math.random()),i=Object(r.a)(o,2),b=i[0],f=i[1],d=Object(c.useRef)(!1);a.a.useEffect((function(){if(!1!==d.current){for(var t=Number(new Date);Number(new Date)-t<=300;);0===e&&u(Math.random())}}),[e]),a.a.useLayoutEffect((function(){if(!1!==d.current){for(var t=Number(new Date);Number(new Date)-t<=300;);0===b&&f(Math.random())}}),[b]);var l=a.a.useCallback((function(){u(0),d.current=!0}),[]),j=a.a.useCallback((function(){f(0),d.current=!0}),[]);return Object(s.jsxs)("div",{children:[Object(s.jsxs)("div",{children:["useEffect: ",Object(s.jsx)("button",{onClick:l,children:e})]}),Object(s.jsxs)("div",{children:["useLayoutEffect: ",Object(s.jsx)("button",{onClick:j,children:b})]})]})};n.default=function(){return Object(s.jsx)(s.Fragment,{children:Object(s.jsx)(u.Page,{backLine:{stepx:20,stepy:20},children:Object(s.jsx)(u.Block,{title:"useEffect&useLayoutEffect\u533a\u522b",children:Object(s.jsx)(u.CodeViewer,{render:Object(s.jsx)(o,{}),code:Object(s.jsx)(u.Marked,{children:"\n```JavaScript\nimport React, { useState } from 'react';\n\nconst index = () => {\n  const [count1, setCount1] = useState(0);\n  const [count2, setCount2] = useState(0);\n\n  React.useEffect(() => {\n    // \u8017\u65f6 300 \u6beb\u79d2\u7684\u8ba1\u7b97\n    const start = Number(new Date());\n    while (Number(new Date()) - start <= 300) {\n      continue;\n    }\n    if (count1 === 0) {\n      setCount1(Math.random());\n    }\n  }, [count1]);\n\n  React.useLayoutEffect(() => {\n    // \u8017\u65f6 300 \u6beb\u79d2\u7684\u8ba1\u7b97\n    const start = Number(new Date());\n    while (Number(new Date()) - start <= 300) {\n      continue;\n    }\n    if (count2 === 0) {\n      setCount2(Math.random());\n    }\n  }, [count2]);\n\n  const handleClick1 = React.useCallback(() => setCount1(0), []);\n  const handleClick2 = React.useCallback(() => setCount2(0), []);\n  return (\n    <div>\n      <div>\n        useEffect: <button onClick={handleClick1}>{count1}</button>\n      </div>\n\n      <div>\n        useLayoutEffect: <button onClick={handleClick2}>{count2}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default index;\n\n```\n"})})})})})}}}]);
//# sourceMappingURL=13.dcb7b591.chunk.js.map